name: CICD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main ]
    
jobs:
 mulelint:
  runs-on: ubuntu-latest
  steps:
   - uses: actions/checkout@v3
   - uses: /teksystemsind/reusable-workflows/.github/workflows/set-environment.yml@master 
   - name: Run Lint
     run: mvn org.nuisto:mule-lint-maven-plugin:analyze-mule
   - uses: actions/checkout@v3
   - uses: actions/upload-artifact@v2
     with:
      name: mule-lint-results
      path: mule-lint-results.json
          
 test:
  needs: mulelint
  runs-on: ubuntu-latest
  steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Test with Maven
      env:
        nexus_username: ${{ secrets.NEXUS_USERNAME }}
        nexus_password: ${{ secrets.NEXUS_PASSWORD }}
      
      run: echo "MUNIT Executed"
 build:
  needs: test
  runs-on: ubuntu-latest
  steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
        
 deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8    
    - name: Deploy to Sandbox
      env:
        USERNAME: ${{ secrets.ANYPOINT_USERNAME }}
        PASSWORD: ${{ secrets.ANYPOINT_PASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DskipTests -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD"
